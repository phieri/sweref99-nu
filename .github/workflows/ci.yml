name: Build all

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

jobs:
  build-sqlite:
    name: Build SQLite
    runs-on: ubuntu-latest
    steps:
      - run: |
          sudo apt-get -qq update && sudo apt-get --quiet --assume-yes install \
            emscripten build-essential gcc-multilib
      - uses: actions/checkout@v5
        with:
          repository: sqlite/sqlite
          ref: version-3.42.1
      - run: |
          mkdir build
          cd build
          emconfigure ./configure
          emmake make -f Makefile.linux-gcc
      - uses: actions/upload-artifact@v4
        with:
          name: sqlite3
          path: build/sqlite3.a
  build-proj:
    name: Build PROJ
    runs-on: ubuntu-latest
    needs: build-sqlite
    steps:
      - run: |
          sudo apt-get -qq update && sudo apt-get --quiet --assume-yes install \
            emscripten libsqlite3-dev curl libcurl4-openssl-dev libtiff-dev build-essential gcc-multilib
      - uses: actions/checkout@v5
        with:
          repository: OSGeo/PROJ
          ref: 9.6.2
      - uses: actions/download-artifact@v5
        continue-on-error: true
        with:
          name: sqlite3
          path: build/
      - run: |
          mkdir build
          cd build
          set(SQLite3_INCLUDE_DIR "/path/to/sqlite")
          set(SQLite3_LIBRARY "/path/to/sqlite/.libs/libsqlite3.a")
          emcmake cmake .. -DBUILD_APPS=OFF -DBUILD_TESTING=OFF -DBUILD_SHARED_LIBS=OFF
          make
      - uses: actions/upload-artifact@v4
        with:
          name: proj
          path: build/lib/libproj.a
  build-wasm:
    name: Build Wasm
    runs-on: ubuntu-24.04
    needs: build-proj
    continue-on-error: true
    steps:
      - run: |
          sudo apt-get -qq update && sudo apt-get --quiet --assume-yes install \
            emscripten libproj-dev build-essential gcc-multilib
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v5
        continue-on-error: true
        with:
          name: proj
          path: build/
      - run: |
          make sr9.wasm
      - uses: actions/upload-artifact@v4
        with:
          name: wasm
          path: |
            sr9.wasm
            sr9.js
  build:
    name: Build
    runs-on: ubuntu-24.04
    continue-on-error: true
    needs: build-wasm
    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v5
        continue-on-error: true
        with:
          name: wasm
          path: _site
      - run: |
          make script.js
          echo "${{ vars.adstxt }}" > _site/ads.txt
          curl -o _site/pico.min.css https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css
      - uses: actions/upload-pages-artifact@v4
  deploy:
    name: Deploy
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
