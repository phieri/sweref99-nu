name: Build all

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

jobs:
  build-wasm:
    name: Build Wasm
    runs-on: ubuntu-24.04
    continue-on-error: true
    steps:
      - uses: firebuild/apt-eatmydata-action@1ffc51fd041ed87dcc2ef405913baec405763640
      - run: |
          sudo apt-get -qq update
          sudo apt-get --quiet --assume-yes install emscripten libsqlite3-dev libtiff-dev libcurl4-openssl-dev
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: OSGeo/PROJ
          ref: 9.6.2
          path: libs/proj
      - name: Build SQLite3 for WebAssembly
        run: |
          git clone https://github.com/sqlite/sqlite.git
          cd sqlite
          emconfigure ./configure --disable-shared --enable-static --prefix=$HOME/sqlite-wasm
          emmake make
          emmake make install
      - run: |
          cd libs/proj
          mkdir build && cd build
          emcmake cmake .. \
            -DCMAKE_INSTALL_PREFIX=$HOME/proj-install \
            -DSQLite3_INCLUDE_DIR=$HOME/sqlite-wasm/include \
            -DSQLite3_LIBRARY=$HOME/sqlite-wasm/lib/libsqlite3.a \
            -DPROJ_DATABASE=OFF -DPROJ_NETWORK=OFF -DBUILD_PROJ_DATABASE=OFF -DBUILD_SHARED_LIBS=OFF -DENABLE_TIFF=OFF -DENABLE_CURL=OFF
          emmake make
          emmake make install
      - run: |
          make sr9.wasm
      - uses: actions/upload-artifact@v4
        with:
          name: wasm
          path: |
            sr9.wasm
            sr9.js
  build:
    name: Build
    runs-on: ubuntu-24.04
    continue-on-error: true
    needs: build-wasm
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: wasm
          path: _site
      - run: |
          make script.js
          echo "${{ vars.adstxt }}" > _site/ads.txt
      - uses: actions/upload-pages-artifact@v3
  deploy:
    name: Deploy
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
