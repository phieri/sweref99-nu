name: Build all

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: '22'
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache TypeScript
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-typescript-global
          restore-keys: |
            ${{ runner.os }}-typescript-
      - run: npm install -g typescript
      - name: Install test dependencies
        run: npm install
      - name: Run tests
        run: npm test
      - name: Cache rendered icons
        id: icon-cache
        uses: actions/cache@v4
        with:
          path: |
            _site/favicon.ico
            _site/apple-touch-icon.png
            _site/icon-192.png
            _site/icon-512.png
          key: ${{ runner.os }}-icons-${{ hashFiles('src/icon.svg') }}
      - name: Install icon generation tools
        if: steps.icon-cache.outputs.cache-hit != 'true'
        run: sudo apt-get -qq update && sudo apt-get install -q -y librsvg2-bin imagemagick
      - run: |
          echo "=== Building TypeScript ==="
          make script.js
          if [ "${{ steps.icon-cache.outputs.cache-hit }}" != "true" ]; then
            echo "=== Generating icons ==="
            make icons
          else
            echo "=== Icons restored from cache ==="
          fi
          echo "=== Final _site contents ==="
          ls -la _site/
          echo "=== Adding additional files ==="
          echo "${{ vars.adstxt }}" > _site/ads.txt
          curl -o _site/pico.min.css https://raw.githubusercontent.com/picocss/pico/v2.1.1/css/pico.min.css
          curl -o _site/proj4.js https://raw.githubusercontent.com/proj4js/proj4js/v2.19.10/dist/proj4.js
          echo "=== Final _site contents ==="
          ls -la _site/
      - uses: actions/upload-pages-artifact@v4
  deploy:
    name: Deploy
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
