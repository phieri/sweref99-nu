// Placeholder WASM module for coordinate transformation
// In production, this file should be generated by the CI pipeline using emscripten
// This mock implementation provides basic WGS84 to SWEREF 99 TM transformation

var Module = typeof Module !== 'undefined' ? Module : {};

// Store coordinate data globally for mock implementation
var mockCoordinateData = {};

// Mock the cwrap function that wraps C functions for JavaScript use
Module.cwrap = function(name, returnType, argTypes) {
    if (name === 'wgs84_to_sweref99tm') {
        return function(lat, lon) {
            // Simplified coordinate transformation for SWEREF 99 TM (EPSG:3006)
            // This is a basic approximation for demonstration purposes only
            // Real transformation requires proper geodetic calculations using PROJ library
            
            // Validate input coordinates are within Sweden's approximate bounds
            if (lat < 55 || lat > 69 || lon < 10 || lon > 24) {
                console.warn(`Coordinates outside Sweden: lat=${lat}, lon=${lon}`);
            }
            
            // Approximate SWEREF 99 TM transformation
            // Using simplified linear approximation for Swedish coordinate system
            var north = 6100000 + (lat - 55) * 111320; // Rough northing calculation
            var east = 300000 + (lon - 11) * 93000;     // Rough easting calculation
            
            // Clamp to reasonable SWEREF 99 TM bounds for Sweden
            north = Math.max(6100000, Math.min(7700000, north));
            east = Math.max(250000, Math.min(900000, east));
            
            // Store in mock memory structure
            var mockPtr = Math.floor(Math.random() * 1000000) + 10000;
            mockCoordinateData[mockPtr] = north;
            mockCoordinateData[mockPtr + 8] = east;
            
            return mockPtr;
        };
    }
    return null;
};

// Mock getValue to simulate reading memory (WASM heap access)
Module.getValue = function(ptr, type) {
    if (mockCoordinateData.hasOwnProperty(ptr)) {
        return mockCoordinateData[ptr];
    }
    return 0;
};

// Mock _free function to simulate memory deallocation
Module._free = function(ptr) {
    // Clean up mock memory
    if (mockCoordinateData.hasOwnProperty(ptr)) {
        delete mockCoordinateData[ptr];
    }
    if (mockCoordinateData.hasOwnProperty(ptr + 8)) {
        delete mockCoordinateData[ptr + 8];
    }
};

console.log('SWEREF 99 WASM module loaded (mock implementation)');